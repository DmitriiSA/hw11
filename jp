pipeline {
  agent {

    docker {
      image 'rendoc72/mav-jenkins-ag'
      args '--privileged --user root -v /var/run/docker.sock:/var/run/docker.sock'
    }

  }

  environment {
    DOCKERHUB_CREDENTIALS= credentials('dockerhubcredentials')
   }

  stages {

    stage('Copy source') {
      steps {
       echo 'This is stage Copy source'
        // Клонируем репозиторий в указанную директорию
               sh 'mkdir /tmp/boxfuse-sample-java-war-hello'
               sh ' git clone  https://github.com/boxfuse/boxfuse-sample-java-war-hello.git /tmp/boxfuse-sample-java-war-hello'
        // Проверяем, что директория существует
                sh '''
                    echo "Проверка директории:"
                    ls -la /tmp/boxfuse-sample-java-war-hello
                '''
        // Клонируем репозиторий в указанную директорию
	       sh 'mkdir /tmp/hw11'
           sh ' git clone https://github.com/DmitriiSA/hw11.git  /tmp/hw11'

        // Проверяем, что директория существует
                sh '''
                    echo "Проверка директории:"
                    ls -la /tmp/hw11
                '''
      }
    }


    stage('Build war') {
      steps {
        echo 'This is stage Build war '
        sh 'cd /tmp/boxfuse-sample-java-war-hello && mvn package'
        sh 'cp /tmp/boxfuse-sample-java-war-hello/target/hello-1.0.war /tmp/hw11/hello-1.0.war'
        sh ' ls -la /tmp/boxfuse-sample-java-war-hello/target'
      }
    }


    stage('Make docker image') {
      steps {
       echo 'This is stage Make docker image '
        // Проверяем, что докер работает
        sh 'cd  /tmp/hw11'
        sh 'pwd'
        sh ' ls -la /tmp/hw11'
        // Копируем WAR файл в текущую директорию
        sh 'cp /tmp/boxfuse-sample-java-war-hello/target/hello-1.0.war ./hello-1.0.war'
        // Копируем Dockerfile в текущую директорию
        sh 'cp /tmp/hw11/dockerfile-app ./Dockerfile'
        // Проверяем наличие файлов
        sh 'ls -la'
       // Собираем образ из текущего контекста
        sh 'docker build -t jen-webapp .'
        //sh 'docker build -f /tmp/hw11/dockerfile-app -t jen-webapp .'
        //sh 'docker build -f /tmp/hw11/dockerfile-app -t jen-webapp . --file /tmp/hw11/hello-1.0.war'
        sh 'docker image tag jen-webapp rendoc72/jen-webapp:prod'
      }
    }


    stage('Login to Docker Hub') {
    steps{
            echo 'This is stage Login to Docker Hub '
	sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
	echo 'Login Completed'
    }
    }


    stage('Push Image to Docker Hub') {
        steps{
        echo 'This is stage Push Image '
        sh 'docker push rendoc72/jen-webapp:prod'
        echo 'Push Image Completed'
        }
    }

    stage('Run docker on vm2') {
      steps {
       echo 'This is stage Run docker '
           sh 'more /etc/passwd'
        sh 'ssh-keyscan -H 158.160.186.14 >> ~/.ssh/known_hosts'
        sh '''ssh root@158.160.186.14 << EOF
	docker pull rendoc72/jen-webapp:prod
	docker run -d -p 8088:8080 rendoc72/jen-webapp:prod
EOF'''
      }
    }
  }
}